{
  "version": "2.0.0",
  "catalog_name": "TO&E Builder Agent Catalog",
  "last_updated": "2025-10-13",
  "changelog": {
    "v2.0.0": "Major update: Anthropic patterns integration, Wikipedia blocking (4 layers), supply/logistics extraction (Section 6), weather/environment support (Section 7), all 9 showcase gaps addressed",
    "v1.0.0": "Initial agent catalog with 16 agents"
  },
  
  "agents": [
    {
      "agent_id": "document_parser",
      "category": "source_extraction",
      "version": "2.0.0",
      "role": "Parse source documents and extract raw facts WITH SOURCE VALIDATION",
      "inputs": ["source_pdf", "document_type", "target_nation", "target_quarter"],
      "outputs": ["raw_facts.json"],
      "capabilities": [
        "PDF text extraction",
        "Table parsing",
        "Figure/diagram interpretation",
        "Citation tracking",
        "Source validation (Tier 1/2 enforcement)",
        "Wikipedia blocking",
        "Supply/logistics extraction (NEW)",
        "Environmental context extraction (NEW)"
      ],
      "prompt_template": "You are a military historian extracting data from {document_type}.\n\nüö® CRITICAL: SOURCE VALIDATION (ANTHROPIC PATTERN: Error Prevention)\n\nBEFORE extracting ANY data, validate source type:\n\n‚úÖ ALLOWED Sources (Tier 1/2 ONLY):\n- Tessin Wehrmacht Encyclopedia (17 volumes)\n- British Army Lists (quarterly 1940-1943)\n- TM E 30-420 (Italian Military Forces handbook)\n- US Field Manuals\n- Archive documents (NARA, Bundesarchiv, Imperial War Museum)\n- Official unit histories (regimental, divisional)\n- Feldgrau.com, Niehorster.org, Lexikon der Wehrmacht\n- Service Historique de la D√©fense (French)\n- Comando Supremo records (Italian)\n\n‚ùå FORBIDDEN Sources:\n- Wikipedia (ANY language: wikipedia.org, wikipedia.com, de.wikipedia, etc.)\n- Wikia/Fandom sites\n- Uncited web sources\n- Forum posts (Axis History Forum, etc.)\n- Social media\n\nIF SOURCE IS FORBIDDEN: Return immediately:\n{\n  \"error\": \"FORBIDDEN_SOURCE_DETECTED\",\n  \"source_detected\": \"{source_name}\",\n  \"source_type\": \"wikipedia\",\n  \"message\": \"Wikipedia not allowed per project requirements. Use Tier 1/2 sources only.\",\n  \"recommended_alternatives\": [\n    \"For German units: Tessin Wehrmacht Encyclopedia, Feldgrau.com\",\n    \"For British units: British Army Lists, unit war diaries, Imperial War Museum\",\n    \"For Italian units: TM E 30-420, Comando Supremo records\"\n  ]\n}\n\nIF SOURCE IS VALID: Proceed with extraction.\n\n---\n\nTask: Extract ALL factual information about {nation} forces in {quarter}.\n\nEXTRACTION CATEGORIES:\n\n**Section 1-5 (Existing)**:\n1. Command (commander name, rank, HQ location)\n2. Personnel (total strength, officers, NCOs, enlisted)\n3. Equipment (tanks, vehicles, artillery - variant level detail)\n4. Organization (subordinate units, structure)\n5. Aircraft (fighters, bombers, recon - ASSIGNED air support)\n\n**Section 6 (NEW - CRITICAL FOR SCENARIOS): SUPPLY/LOGISTICS**\nExtract with citations:\n1. supply_status (qualitative assessment)\n   - \"What is the operational supply situation?\"\n   - \"Are there fuel shortages? Ammunition constraints?\"\n   - Example: \"Adequate for defensive operations, strained for offensive\"\n   \n2. operational_radius_km (distance from supply depot)\n   - \"How far can units operate from main supply base?\"\n   - \"What is effective range from Tripoli/Benghazi/Tobruk?\"\n   - Example: 350 km from Tripoli\n   \n3. fuel_reserves_days (at current consumption)\n   - \"How many days of fuel are available?\"\n   - \"What is fuel consumption rate?\"\n   - Example: 6.5 days of fuel reserves\n   \n4. ammunition_days (days of combat supply)\n   - \"How many days of ammunition?\"\n   - \"Are specific calibers in shortage?\"\n   - Example: 8 days of ammunition\n   \n5. water_liters_per_day (critical for desert)\n   - \"What is water capacity per man per day?\"\n   - \"How many days of water reserves?\"\n   - Example: 4.5 liters per day per man\n\n**Section 7 (NEW - CRITICAL FOR SCENARIOS): WEATHER/ENVIRONMENT**\nExtract environmental context:\n1. season_quarter\n   - \"What quarter is this? What are seasonal conditions?\"\n   - Example: \"1941-Q2 (April-June) - Late Spring/Early Summer\"\n   \n2. temperature_range_c (min/max Celsius)\n   - \"What are typical temperatures for this period?\"\n   - \"Any extreme heat/cold recorded?\"\n   - Example: {\"min\": 18, \"max\": 35}\n   \n3. terrain_type\n   - \"What terrain does this unit operate in?\"\n   - \"Sand desert? Rocky desert? Coastal plain?\"\n   - Example: \"Coastal plain and rocky desert\"\n   \n4. storm_frequency_days (sandstorms, Ghibli winds)\n   - \"How often do sandstorms occur?\"\n   - \"What is impact on operations?\"\n   - Example: 2-3 days per month\n   \n5. daylight_hours\n   - \"Average daylight hours for this quarter?\"\n   - \"Impact on operational tempo?\"\n   - Example: 13.5 hours\n\n---\n\nOUTPUT FORMAT (ANTHROPIC PATTERN: Clear Structure):\n\n{\n  \"source_validation\": {\n    \"source_name\": \"{document_name}\",\n    \"source_type\": \"tessin_vol_12\",\n    \"tier\": 1,\n    \"confidence\": 95,\n    \"wikipedia_excluded\": false,\n    \"validation_passed\": true\n  },\n  \"facts\": [\n    {\n      \"category\": \"command\",\n      \"data\": {\n        \"unit\": \"XXI Corpo d'Armata\",\n        \"commander\": \"Generale di Corpo d'Armata Lorenzo Dalmazzo\",\n        \"rank\": \"Generale di Corpo d'Armata\"\n      },\n      \"source\": \"TM E 30-420, page 45, section 2.3\",\n      \"confidence\": 95\n    },\n    {\n      \"category\": \"supply_logistics\",\n      \"data\": {\n        \"supply_status\": \"Adequate for defensive operations, strained for offensive operations\",\n        \"operational_radius_km\": 350,\n        \"fuel_reserves_days\": 6.5,\n        \"ammunition_days\": 8,\n        \"water_liters_per_day\": 4.5\n      },\n      \"source\": \"Tessin Vol 12, page 145, logistics section\",\n      \"confidence\": 85\n    },\n    {\n      \"category\": \"weather_environment\",\n      \"data\": {\n        \"season_quarter\": \"1941-Q2 (April-June)\",\n        \"temperature_range_c\": {\"min\": 18, \"max\": 35},\n        \"terrain_type\": \"coastal plain and rocky desert\",\n        \"storm_frequency_days\": 2,\n        \"daylight_hours\": 13.5\n      },\n      \"source\": \"Weather records Q2 1941, page 23\",\n      \"confidence\": 90\n    }\n  ]\n}\n\nExtract facts now from: {source_content}",
      "validation_rules": [
        "Source validation MUST pass before extraction begins",
        "Wikipedia = IMMEDIATE REJECTION with error message",
        "All facts must have Tier 1/2 source citations",
        "Confidence must be 0-100",
        "No hallucinated data",
        "Section 6 (supply/logistics) fields REQUIRED for v3.0 schema",
        "Section 7 (weather/environment) fields REQUIRED for v3.0 schema",
        "Supply data must have realistic values (fuel days 1-30, ammo days 1-30, etc.)",
        "Environmental data must match quarter (temperature appropriate for season)"
      ],
      "anthropic_patterns_applied": [
        "Error Prevention: Source validation before processing",
        "Clear Tool Interface: Explicit allowed/forbidden sources",
        "Examples: Concrete output format with real data",
        "Stopping Conditions: Immediate rejection for forbidden sources"
      ]
    },
    
    {
      "agent_id": "historical_research",
      "category": "source_extraction",
      "version": "2.0.0",
      "role": "Cross-reference facts across multiple sources WITH WIKIPEDIA FILTERING",
      "inputs": ["raw_facts.json", "additional_sources[]"],
      "outputs": ["verified_facts.json", "conflicts.json", "wikipedia_exclusion_log.json"],
      "capabilities": [
        "Multi-source verification",
        "Conflict identification",
        "Best estimate selection",
        "Source quality ranking",
        "Wikipedia filtering (NEW)",
        "Supply/logistics data verification (NEW)",
        "Environmental data cross-reference (NEW)"
      ],
      "prompt_template": "You are verifying historical facts across multiple sources.\n\nüö® CRITICAL: WIKIPEDIA FILTERING (ANTHROPIC PATTERN: Error Prevention)\n\nBEFORE processing additional_sources, FILTER OUT forbidden sources:\n\nadditional_sources_filtered = [\n  s for s in additional_sources \n  if 'wikipedia' not in s['url'].lower() \n  and 'wikia' not in s['url'].lower()\n  and 'fandom' not in s['url'].lower()\n]\n\nIF Wikipedia detected in additional_sources:\n- Log warning: \"Wikipedia excluded from {unit_designation} research\"\n- Continue with remaining valid Tier 1/2 sources\n- Add note to conflicts.json:\n  {\n    \"wikipedia_excluded\": true,\n    \"excluded_count\": {count},\n    \"reason\": \"Project requirement: Tier 1/2 sources only\",\n    \"excluded_sources\": [{wikipedia_urls}]\n  }\n\nIF insufficient sources after filtering (<2 Tier 1/2 sources):\n- Flag for manual research\n- Return status: \"INSUFFICIENT_TIER1_SOURCES\"\n- Recommend specific Tier 1/2 alternatives\n\n---\n\nPrimary facts: {raw_facts}\nAdditional sources (FILTERED - Tier 1/2 only): {source_list_filtered}\n\nTask: For each fact (INCLUDING NEW Section 6 & 7), verify against Tier 1/2 sources:\n\n**Section 1-5 Verification (Existing)**:\n1. Command data (commander names, ranks, HQ locations)\n2. Personnel totals (officers, NCOs, enlisted)\n3. Equipment counts (tanks, vehicles, artillery)\n4. Organizational structure\n5. Aircraft assignments\n\n**Section 6 Verification (NEW): SUPPLY/LOGISTICS**\nCross-reference across multiple sources:\n- Fuel reserves: Do multiple sources agree on days available?\n- Ammunition states: Verify caliber-specific shortages\n- Operational radius: Confirm distance from supply depots\n- Water capacity: Verify desert logistics\n- Supply status assessment: Validate qualitative descriptions\n\nIF supply data conflicts:\n- Report range: \"Fuel reserves: 5-8 days (source variance)\"\n- Use most conservative estimate\n- Flag if variance >30%\n\n**Section 7 Verification (NEW): WEATHER/ENVIRONMENT**\nCross-reference environmental data:\n- Temperature ranges: Confirm from weather records\n- Terrain assessments: Verify from unit after-action reports\n- Storm frequency: Cross-check meteorological data\n- Seasonal impacts: Validate from operational histories\n\nIF environmental data conflicts:\n- Prefer official weather service data\n- Use unit reports as secondary confirmation\n- Flag if major discrepancies\n\n---\n\nOUTPUT FORMAT (ANTHROPIC PATTERN: Clear Structure with Error Handling):\n\n{\n  \"wikipedia_filtering\": {\n    \"sources_before_filtering\": 12,\n    \"sources_after_filtering\": 10,\n    \"wikipedia_excluded\": 2,\n    \"excluded_urls\": [\"en.wikipedia.org/...\", \"de.wikipedia.org/...\"],\n    \"tier1_sources_remaining\": 8,\n    \"tier2_sources_remaining\": 2\n  },\n  \"verified_facts\": [\n    {\n      \"fact\": {\n        \"category\": \"supply_logistics\",\n        \"data\": {\n          \"fuel_reserves_days\": 6.5,\n          \"ammunition_days\": 8\n        }\n      },\n      \"confirming_sources\": [\n        {\"source\": \"Tessin Vol 12, page 145\", \"tier\": 1, \"confidence\": 90},\n        {\"source\": \"Bundesarchiv RH 27-5/21\", \"tier\": 1, \"confidence\": 85}\n      ],\n      \"conflicting_sources\": [],\n      \"best_estimate\": {\n        \"fuel_reserves_days\": 6.5,\n        \"ammunition_days\": 8\n      },\n      \"updated_confidence\": 90,\n      \"notes\": \"Two Tier 1 sources agree on fuel/ammo states\"\n    }\n  ],\n  \"conflicts\": [\n    {\n      \"fact_category\": \"personnel\",\n      \"conflicting_data\": [\n        {\"source\": \"Tessin\", \"value\": 15000, \"tier\": 1},\n        {\"source\": \"War Diary\", \"value\": 14500, \"tier\": 1}\n      ],\n      \"resolution\": \"Use mean value: 14750\",\n      \"confidence_penalty\": -5\n    }\n  ],\n  \"insufficient_data_flags\": [\n    {\n      \"category\": \"weather_environment\",\n      \"field\": \"storm_frequency_days\",\n      \"issue\": \"Only 1 Tier 1 source found\",\n      \"recommendation\": \"Search weather service archives for Q2 1941\"\n    }\n  ]\n}\n\nVerify facts now.",
      "validation_rules": [
        "Wikipedia MUST be filtered before verification begins",
        "Conflicts must explicitly flag if Wikipedia was excluded",
        "Minimum 2 Tier 1/2 sources for supply/logistics data",
        "Environmental data should be from official weather records when possible",
        "Confidence adjusted based on source agreement (100% agreement = +0, 50% agreement = -20)",
        "Supply data variance >30% = flag for manual review",
        "IF <2 Tier 1 sources after filtering = flag for manual research"
      ],
      "anthropic_patterns_applied": [
        "Error Prevention: Wikipedia filtering before processing",
        "Stopping Conditions: Insufficient sources flag for human intervention",
        "Clear Output: Explicit filtering log with counts",
        "Feedback Loop: Flags issues for manual resolution"
      ]
    },
    
    {
      "agent_id": "org_hierarchy",
      "category": "structure_organization",
      "role": "Build organizational tree from Theater to Squad",
      "inputs": ["verified_facts.json", "nation", "quarter"],
      "outputs": ["org_tree.json"],
      "capabilities": [
        "Hierarchy construction",
        "Parent-child relationship mapping",
        "Commander assignment",
        "Unit naming normalization"
      ],
      "prompt_template": "You are building the complete organizational hierarchy for {nation} in {quarter}.\n\nFacts available: {verified_facts}\n\nTask: Construct organizational tree from Theater level down to Squad level.\n\nFor each level, identify:\n1. Unit designation\n2. Unit type\n3. Commander (name and rank)\n4. Parent formation\n5. Subordinate units\n6. Personnel strength\n\nOutput: Hierarchical JSON structure\n\nExample:\n{\n  \"level\": \"corps\",\n  \"unit_designation\": \"XXI Corpo d'Armata\",\n  \"commander\": {\"name\": \"...\", \"rank\": \"...\"},\n  \"parent\": \"10th Army\",\n  \"subordinates\": [\n    {\"unit\": \"Sirte Division\", \"strength\": 8000}\n  ]\n}\n\nBuild complete hierarchy now.",
      "validation_rules": [
        "Every unit must have a parent (except theater)",
        "Subordinate counts must match organizational doctrine",
        "Personnel strengths must be provided"
      ]
    },
    
    {
      "agent_id": "toe_template",
      "category": "structure_organization",
      "role": "Create standard unit templates for reuse",
      "inputs": ["nation", "quarter", "unit_type", "doctrine_sources"],
      "outputs": ["templates/{unit_type}_template.json"],
      "capabilities": [
        "Doctrine interpretation",
        "Standard TO&E creation",
        "Equipment allocation patterns",
        "Personnel position definition"
      ],
      "prompt_template": "You are creating a standard TO&E template for {nation} {unit_type} in {quarter}.\n\nDoctrine sources: {doctrine_sources}\n\nTask: Define the STANDARD organization for this unit type:\n\n1. Personnel structure (officers, NCOs, enlisted)\n2. Standard equipment allocation\n3. Weapons per position\n4. Vehicle/transport allocation\n5. Tactical organization (squads, sections, platoons)\n6. Individual positions (for squad templates)\n\nFor squad templates, define EACH position:\n- Position name\n- Rank\n- Primary weapon (with WITW ID if available)\n- Secondary weapons/equipment\n- Ammunition load\n- Responsibilities\n\nOutput: Complete template following unified TO&E schema.\n\nCreate template now.",
      "validation_rules": [
        "Template must conform to unified TO&E schema",
        "All positions must have weapons assigned",
        "Equipment totals must be calculable"
      ]
    },
    
    {
      "agent_id": "unit_instantiation",
      "category": "structure_organization",
      "version": "2.0.0",
      "role": "Create specific unit instances from templates WITH v3.0 SCHEMA SUPPORT",
      "inputs": ["template.json", "org_tree.json", "unit_specific_data", "parent_unit", "quarter_context"],
      "outputs": ["{unit_designation}_toe.json"],
      "capabilities": [
        "Template instantiation",
        "Unit-specific modifications",
        "Parent reference linking",
        "Unique ID assignment",
        "Supply/logistics field population (NEW)",
        "Weather/environment field population (NEW)"
      ],
      "prompt_template": "You are creating a specific unit instance from a template.\n\nTemplate: {template}\nUnit designation: {unit_designation}\nParent unit: {parent_unit}\nQuarter context: {quarter_context}\nSpecific modifications: {modifications}\n\nTask: Create unit-specific TO&E JSON following Ground Forces Schema v3.0:\n\n1. Apply template as base\n\n2. Add unit-specific information (Sections 1-5):\n   - Actual commander name\n   - Actual personnel count (if different from template)\n   - Equipment variations (variant-level detail)\n   - Parent formation reference\n\n3. **ADD Section 6: SUPPLY/LOGISTICS (NEW v3.0 REQUIRED)**:\n   {\n     \"supply_status\": \"{qualitative_assessment}\",\n     \"operational_radius_km\": {distance_from_supply_depot},\n     \"fuel_reserves_days\": {days_of_fuel},\n     \"ammunition_days\": {days_of_ammo},\n     \"water_liters_per_day\": {water_capacity_per_person}\n   }\n\n   Extract from unit_specific_data or use template defaults.\n   **REQUIRED**: All 5 fields must be present.\n\n4. **ADD Section 7: WEATHER/ENVIRONMENT (NEW v3.0 REQUIRED)**:\n   {\n     \"season_quarter\": \"{quarter} (e.g., 1941-Q2)\",\n     \"temperature_range_c\": {\"min\": {temp_min}, \"max\": {temp_max}},\n     \"terrain_type\": \"{primary_terrain}\",\n     \"storm_frequency_days\": {sandstorm_days_per_month},\n     \"daylight_hours\": {average_daylight_hours}\n   }\n\n   Use quarter_context for environmental data.\n   **REQUIRED**: All 5 fields must be present.\n\n5. Maintain full SCM-level detail at all organizational levels\n\n6. Add unit-specific tactical notes\n\n---\n\nOUTPUT EXAMPLE (v3.0 Schema):\n\n{\n  \"unit_id\": \"germany_1941q2_deutsches_afrikakorps\",\n  \"unit_designation\": \"Deutsches Afrikakorps\",\n  \"nation\": \"germany\",\n  \"quarter\": \"1941-Q2\",\n  \"parent_formation\": \"Panzergruppe Afrika\",\n  \"commander\": {\n    \"name\": \"Generalleutnant Erwin Rommel\",\n    \"rank\": \"Generalleutnant\"\n  },\n  \"personnel\": {\n    \"total\": 45000,\n    \"officers\": 2800,\n    \"ncos\": 8500,\n    \"enlisted\": 33700\n  },\n  ...[Sections 2-5 as before]...\n  \n  \"supply_logistics\": {\n    \"supply_status\": \"Adequate for defensive operations, strained for offensive operations. Primary constraint: fuel delivery from Tripoli (1800km).\",\n    \"operational_radius_km\": 350,\n    \"fuel_reserves_days\": 6.5,\n    \"ammunition_days\": 8,\n    \"water_liters_per_day\": 4.5\n  },\n  \n  \"weather_environment\": {\n    \"season_quarter\": \"1941-Q2 (April-June)\",\n    \"temperature_range_c\": {\"min\": 18, \"max\": 35},\n    \"terrain_type\": \"coastal plain and rocky desert\",\n    \"storm_frequency_days\": 2,\n    \"daylight_hours\": 13.5\n  },\n  \n  \"schema_version\": \"3.0\"\n}\n\nCreate unit instance now following v3.0 schema.",
      "validation_rules": [
        "Must reference parent unit correctly",
        "All required SCM fields must be present (Sections 1-5)",
        "Section 6 (supply_logistics) REQUIRED with all 5 fields - v3.0",
        "Section 7 (weather_environment) REQUIRED with all 5 fields - v3.0",
        "Template deviations must be documented",
        "schema_version field must be '3.0'",
        "Supply values must be realistic (fuel/ammo days 1-30)",
        "Environmental data must match quarter (appropriate temperatures)"
      ],
      "anthropic_patterns_applied": [
        "Clear Tool Interface: Explicit required fields for v3.0",
        "Examples: Complete output with all new sections",
        "Validation: Schema version tracking"
      ]
    },
    
    {
      "agent_id": "theater_allocator",
      "category": "equipment_distribution",
      "role": "Distribute theater SCM totals across divisions",
      "inputs": ["theater_scm.json", "org_tree.json", "historical_allocation_data"],
      "outputs": ["division_equipment_allocations.json"],
      "capabilities": [
        "Top-down equipment distribution",
        "Historical allocation pattern matching",
        "Priority unit identification",
        "Equipment variant distribution"
      ],
      "prompt_template": "You are distributing theater-level equipment across divisions.\n\nTheater totals: {theater_scm}\nDivisions: {division_list}\nHistorical patterns: {allocation_patterns}\n\nTask: Distribute ALL theater equipment to divisions based on:\n\n1. Division type (armor/infantry/colonial)\n2. Historical priorities\n3. Operational role\n4. Equipment availability dates\n\nRules:\n- Sum of all divisions MUST equal theater total\n- Variant-specific (e.g., 'F2 guns go to elite units')\n- Realistic allocations per division type\n- Account for corps-level equipment\n\nOutput: Equipment allocation per division with justification.\n\nDistribute equipment now.",
      "validation_rules": [
        "Sum of divisions = theater total (within 5%)",
        "All equipment variants accounted for",
        "Allocations match historical patterns"
      ]
    },
    
    {
      "agent_id": "division_cascader",
      "category": "equipment_distribution",
      "role": "Cascade division equipment down to regiment/battalion/company/squad",
      "inputs": ["division_toe.json", "subordinate_units[]", "distribution_doctrine"],
      "outputs": ["regiment_equipment.json", "battalion_equipment.json", "company_equipment.json", "squad_equipment.json"],
      "capabilities": [
        "Equipment cascading",
        "TO&E ratio application",
        "Company-level distribution",
        "Squad-level allocation"
      ],
      "prompt_template": "You are cascading equipment from division level down through the hierarchy.\n\nDivision equipment: {division_equipment}\nSubordinate structure: {org_structure}\nDistribution doctrine: {doctrine}\n\nTask: Distribute division equipment to all subordinate units:\n\nDivision ‚Üí Regiments\nRegiments ‚Üí Battalions\nBattalions ‚Üí Companies\nCompanies ‚Üí Platoons\nPlatoons ‚Üí Squads\n\nRules:\n- Use historical TO&E ratios\n- Consider unit specialization (HQ company vs rifle company)\n- Maintain full SCM detail at each level\n- Sum of children MUST equal parent\n\nFor squads, assign equipment to individual positions.\n\nOutput: Complete equipment allocation for all subordinate units.\n\nDistribute now.",
      "validation_rules": [
        "Parent-child equipment totals match",
        "All variants distributed",
        "Squad positions have individual weapons"
      ]
    },
    
    {
      "agent_id": "equipment_reconciliation",
      "category": "equipment_distribution",
      "role": "Verify equipment totals at all levels",
      "inputs": ["all_unit_toe_files[]"],
      "outputs": ["reconciliation_report.json", "corrections.json"],
      "capabilities": [
        "Multi-level aggregation checking",
        "Discrepancy identification",
        "Correction suggestion",
        "Confidence scoring"
      ],
      "prompt_template": "You are verifying equipment totals across all organizational levels.\n\nAll unit files: {unit_files}\n\nTask: For each equipment category, verify:\n\nSquad ‚Üí Platoon ‚Üí Company ‚Üí Battalion ‚Üí Regiment ‚Üí Division ‚Üí Corps ‚Üí Theater\n\nCheck:\n1. Do all subordinate units sum to parent?\n2. Are there any missing units?\n3. Are there any double-counted items?\n4. Do variant counts match across levels?\n\nOutput: Reconciliation report with:\n- ‚úì Verified totals (perfect match)\n- ‚ö† Minor discrepancies (< 5% difference)\n- ‚ùå Major errors (> 5% difference)\n- Suggested corrections\n\nGenerate report now.",
      "validation_rules": [
        "All equipment paths traced",
        "Discrepancies quantified",
        "Correction suggestions feasible"
      ]
    },
    
    {
      "agent_id": "bottom_up_aggregator",
      "category": "aggregation_calculation",
      "version": "2.0.0",
      "role": "Aggregate squad data up to theater SCM WITH SUPPLY/LOGISTICS AGGREGATION",
      "inputs": ["squad_toe_files[]", "org_tree.json", "quarter_context"],
      "outputs": ["aggregated_units[]", "theater_scm.json"],
      "capabilities": [
        "Multi-level summation",
        "Variant aggregation",
        "Personnel rollup",
        "Top-3 weapon calculation",
        "Supply/logistics aggregation (NEW)",
        "Environmental data handling (NEW)"
      ],
      "prompt_template": "You are aggregating unit data from squads up to theater level following v3.0 schema.\n\nSquad files: {squad_files}\nOrganization tree: {org_tree}\nQuarter context: {quarter_context}\n\nTask: For each organizational level, calculate:\n\n**Section 1-5 Aggregation (Existing)**:\n1. Total personnel (sum of subordinates + HQ)\n2. Top 3 infantry weapons (aggregate all subordinates)\n3. Equipment by variant (sum across all subordinates)\n4. Vehicles by type\n5. Artillery by caliber\n6. Aircraft by type (ASSIGNED air support)\n\n**Section 6 Aggregation (NEW): SUPPLY/LOGISTICS**\n\nAGGREGATING Fields:\n- fuel_reserves_days: Calculate theater-level days from total liters\n  - Sum total fuel liters across all units\n  - Divide by average daily consumption rate\n  - Result = theater fuel days\n  \n- ammunition_days: Calculate theater-level days from total rounds\n  - Sum ammunition (by caliber) across all units\n  - Divide by average daily combat consumption\n  - Result = theater ammunition days\n  \n- water_liters_per_day: Sum capacity across all units\n  - Total theater water capacity per day\n  - Critical for desert operations planning\n\nNON-AGGREGATING Fields:\n- operational_radius_km: Report RANGE (min-max), not sum\n  - \"Operational radius: 200-400km depending on unit location\"\n  - NOT: \"Operational radius: 15000km\" (meaningless sum)\n  \n- supply_status: Generate theater-level SUMMARY\n  - Synthesize from subordinate unit statuses\n  - Identify common constraints\n  - Example: \"Theater supply adequate for defensive operations, fuel constraints limit offensive reach beyond 350km from Tripoli.\"\n\n**Section 7 Handling (NEW): WEATHER/ENVIRONMENT**\n\nQuarter-Level Data (NOT unit-specific):\n- Use quarter_context environmental data for ALL units in same quarter\n- DO NOT aggregate (weather is same across theater)\n- Apply to theater SCM:\n  - season_quarter: From quarter_context\n  - temperature_range_c: Theater-wide conditions\n  - terrain_type: Primary terrain (\"varied: coastal plain, rocky desert, sand seas\")\n  - storm_frequency_days: Average across theater\n  - daylight_hours: Quarter average\n\nProcess:\n- Start with squads\n- Aggregate to platoons\n- Platoons ‚Üí Companies\n- Companies ‚Üí Battalions\n- Battalions ‚Üí Regiments\n- Regiments ‚Üí Divisions\n- Divisions ‚Üí Corps\n- Corps ‚Üí Theater SCM\n\nAt EACH level:\n- Aggregate Section 1-5 (sum equipment, personnel)\n- Aggregate Section 6 where applicable (fuel, ammo, water)\n- Report Section 6 ranges where applicable (operational_radius)\n- Apply Section 7 from quarter_context (no aggregation)\n\n---\n\nOUTPUT EXAMPLE (Theater SCM v3.0):\n\n{\n  \"unit_id\": \"germany_1941q2_panzergruppe_afrika\",\n  \"unit_designation\": \"Panzergruppe Afrika\",\n  \"organizational_level\": \"theater\",\n  \"quarter\": \"1941-Q2\",\n  \"personnel\": {\n    \"total\": 125000,\n    \"officers\": 7500,\n    \"ncos\": 22000,\n    \"enlisted\": 95500\n  },\n  \"top_3_weapons\": [\n    {\"weapon\": \"Karabiner 98k\", \"count\": 89500},\n    {\"weapon\": \"MG 34\", \"count\": 5200},\n    {\"weapon\": \"MP 40\", \"count\": 3800}\n  ],\n  ...[Equipment sections]...\n  \n  \"supply_logistics\": {\n    \"supply_status\": \"Theater supply adequate for defensive operations. Primary constraints: 1) Fuel delivery from Tripoli (1800km supply line), 2) Port capacity limitations at Benghazi (damaged), 3) Water transport for forward positions. Offensive operations limited to 300-400km radius from Tripoli without establishing forward dumps.\",\n    \"operational_radius_range\": \"200-400km from primary supply depots\",\n    \"fuel_reserves_days\": 8.2,\n    \"ammunition_days\": 12.5,\n    \"water_capacity_liters_per_day\": 562500\n  },\n  \n  \"weather_environment\": {\n    \"season_quarter\": \"1941-Q2 (April-June)\",\n    \"temperature_range_c\": {\"min\": 15, \"max\": 40},\n    \"terrain_type\": \"varied: coastal plain (Gazala-Tobruk), rocky desert (interior), sand seas (south)\",\n    \"storm_frequency_days\": 3,\n    \"daylight_hours\": 13.5\n  },\n  \n  \"schema_version\": \"3.0\"\n}\n\nAggregate now following v3.0 schema.",
      "validation_rules": [
        "No equipment lost in aggregation",
        "All variants preserved",
        "Top 3 weapons correctly calculated",
        "Supply aggregation: Fuel/ammo/water SUMMED correctly",
        "operational_radius: Report as RANGE, not sum",
        "supply_status: Theater-level SUMMARY, not concatenation",
        "Weather/environment: Use quarter_context (no aggregation)",
        "Schema version must be '3.0' at all levels"
      ],
      "anthropic_patterns_applied": [
        "Clear Logic: Explicit rules for aggregating vs non-aggregating fields",
        "Error Prevention: Prevent meaningless sums (operational_radius)",
        "Examples: Complete theater SCM with proper aggregation"
      ]
    },
    
    {
      "agent_id": "top3_calculator",
      "category": "aggregation_calculation",
      "role": "Calculate top 3 infantry weapons at each level",
      "inputs": ["unit_equipment.json", "subordinate_weapons[]"],
      "outputs": ["top_3_infantry_weapons"],
      "capabilities": [
        "Weapon counting across units",
        "Sorting by count",
        "Type classification",
        "WITW ID lookup"
      ],
      "prompt_template": "You are calculating the top 3 infantry weapons for a unit.\n\nAll weapons in unit: {weapon_list}\n\nTask: Identify top 3 infantry weapons by count:\n\n1. Count all infantry weapons (rifles, MGs, SMGs, pistols, AT rifles)\n2. Exclude artillery, vehicle weapons, grenades\n3. Sort by total count\n4. Return top 3 with:\n   - Weapon name\n   - Total count\n   - Weapon type\n   - WITW ID (if available)\n\nOutput: top_3_infantry_weapons object matching SCM schema\n\nCalculate now.",
      "validation_rules": [
        "Only infantry weapons counted",
        "Correct sorting by count",
        "Types properly classified"
      ]
    },
    
    {
      "agent_id": "schema_validator",
      "category": "validation",
      "version": "2.0.0",
      "role": "Validate JSON against unified TO&E schema v3.0 WITH WIKIPEDIA DETECTION",
      "inputs": ["unit_toe.json", "schema_definition"],
      "outputs": ["validation_result.json"],
      "capabilities": [
        "Schema compliance checking",
        "Required field verification",
        "Data type validation",
        "Validation rule enforcement",
        "Wikipedia source detection (NEW - CRITICAL)",
        "Supply/logistics validation (NEW - v3.0)",
        "Weather/environment validation (NEW - v3.0)"
      ],
      "prompt_template": "You are validating a unit TO&E file against the unified schema v3.0.\n\nUnit file: {unit_file}\nSchema: {schema}\nSchema version required: 3.0\n\nüö® CRITICAL CHECK #1: WIKIPEDIA DETECTION (ANTHROPIC PATTERN: Error Prevention)\n\nBEFORE all other validation, scan for Wikipedia:\n\n1. Extract all source citations from unit_file.validation.sources\n2. Check EACH source URL and title for forbidden patterns:\n   - 'wikipedia.org'\n   - 'wikipedia.com'\n   - 'wikia'\n   - 'fandom'\n   - 'wiki/' (generic)\n\n3. IF Wikipedia detected:\n   CRITICAL ERROR - validation FAILS immediately:\n   {\n     \"validation_status\": \"CRITICAL_FAILURE\",\n     \"reason\": \"WIKIPEDIA_SOURCE_DETECTED\",\n     \"unit\": \"{unit_designation}\",\n     \"forbidden_sources\": [{list_all_wikipedia_urls}],\n     \"action_required\": \"Re-extract unit with document_parser v2.0 using Tier 1/2 sources only\",\n     \"severity\": \"BLOCKING\"\n   }\n\n4. IF sources clean: Proceed with schema validation\n\n---\n\nTask: Check ALL requirements for v3.0 schema:\n\n**Section 1-5 Validation (Existing)**:\n1. Required fields present\n2. Data types correct\n3. Validation rules satisfied:\n   - tanks.total = sum(heavy + medium + light)\n   - total_personnel ‚âà officers + ncos + enlisted (¬±5%)\n   - ground_vehicles_total ‚â• sum(all vehicle categories)\n   - artillery_total ‚â• sum(field + AT + AA)\n   - aircraft_total ‚â• sum(fighters + bombers + recon + transport)\n4. Allowed values respected\n5. References valid (parent units exist)\n\n**Section 6 Validation (NEW - v3.0 REQUIRED)**:\nCheck supply_logistics object exists with ALL 5 fields:\n- supply_status (string, non-empty)\n- operational_radius_km (integer, > 0)\n- fuel_reserves_days (number, ‚â• 0, typically 1-30)\n- ammunition_days (number, ‚â• 0, typically 1-30)\n- water_liters_per_day (number, > 0, desert operations)\n\nValidation rules:\n- operational_radius_km must be realistic (50-1000km typical)\n- fuel_reserves_days must be realistic (1-30 days typical)\n- ammunition_days must be realistic (1-30 days typical)\n- water_liters_per_day must be realistic (3-6 L/person/day desert)\n\n**Section 7 Validation (NEW - v3.0 REQUIRED)**:\nCheck weather_environment object exists with ALL 5 fields:\n- season_quarter (string, format: \"YYYY-QN\")\n- temperature_range_c (object with min/max integers)\n- terrain_type (string, non-empty)\n- storm_frequency_days (integer, ‚â• 0, typically 0-10)\n- daylight_hours (number, 0-24)\n\nValidation rules:\n- temperature_range_c.min < temperature_range_c.max\n- temperature values realistic for North Africa (-5 to 50¬∞C range)\n- storm_frequency_days realistic (0-10 days/month typical)\n- daylight_hours realistic (10-15 hours typical)\n\n**Schema Version Check**:\n- schema_version field must equal \"3.0\"\n- IF schema_version missing or < 3.0: WARNING (needs upgrade)\n\n---\n\nOutput: Validation report with:\n- üö® CRITICAL: Wikipedia detected (BLOCKING)\n- ‚ùå FAILED: Schema violations (with details)\n- ‚ö† WARNING: Non-critical issues\n- ‚úì PASSED: All checks successful\n\n**Example Output**:\n{\n  \"unit\": \"germany_1941q2_deutsches_afrikakorps\",\n  \"schema_version_required\": \"3.0\",\n  \"schema_version_found\": \"3.0\",\n  \"wikipedia_check\": {\n    \"status\": \"PASS\",\n    \"wikipedia_detected\": false,\n    \"sources_scanned\": 12\n  },\n  \"section_1_5_validation\": {\n    \"status\": \"PASS\",\n    \"checks_passed\": 15,\n    \"checks_failed\": 0\n  },\n  \"section_6_validation\": {\n    \"status\": \"PASS\",\n    \"all_fields_present\": true,\n    \"fields_validated\": [\n      {\"field\": \"supply_status\", \"status\": \"PASS\"},\n      {\"field\": \"operational_radius_km\", \"value\": 350, \"status\": \"PASS\"},\n      {\"field\": \"fuel_reserves_days\", \"value\": 6.5, \"status\": \"PASS\"},\n      {\"field\": \"ammunition_days\", \"value\": 8, \"status\": \"PASS\"},\n      {\"field\": \"water_liters_per_day\", \"value\": 4.5, \"status\": \"PASS\"}\n    ]\n  },\n  \"section_7_validation\": {\n    \"status\": \"PASS\",\n    \"all_fields_present\": true,\n    \"temperature_range_valid\": true,\n    \"fields_validated\": 5\n  },\n  \"overall_status\": \"PASS\",\n  \"severity\": \"NONE\",\n  \"action_required\": \"None - unit ready for production\"\n}\n\nValidate now.",
      "validation_rules": [
        "Wikipedia check is FIRST and BLOCKING if detected",
        "All schema v3.0 rules checked",
        "Section 6 (supply_logistics) ALL 5 fields REQUIRED",
        "Section 7 (weather_environment) ALL 5 fields REQUIRED",
        "Schema version must be '3.0'",
        "Clear error messages with field names and expected values",
        "Severity levels: CRITICAL (Wikipedia) > FAILED (schema) > WARNING (non-critical)",
        "Supply values must be realistic (fuel/ammo 1-30 days typical)",
        "Environmental values must be realistic (temps -5 to 50¬∞C, daylight 10-15 hours)"
      ],
      "anthropic_patterns_applied": [
        "Error Prevention: Wikipedia check first, blocks if detected",
        "Stopping Conditions: CRITICAL status prevents further processing",
        "Clear Output: Structured validation report with severity levels",
        "Examples: Complete validation output structure"
      ]
    },
    
    {
      "agent_id": "historical_accuracy",
      "category": "validation",
      "role": "Verify data matches historical records",
      "inputs": ["unit_toe.json", "historical_sources[]"],
      "outputs": ["accuracy_report.json"],
      "capabilities": [
        "Historical cross-referencing",
        "Anachronism detection",
        "Equipment availability checking",
        "Doctrine compliance"
      ],
      "prompt_template": "You are verifying historical accuracy of unit data.\n\nUnit: {unit_designation}\nQuarter: {quarter}\nData: {unit_data}\nSources: {historical_sources}\n\nTask: Verify:\n\n1. Equipment existed in this time period\n   - Check equipment introduction dates\n   - Flag anachronisms\n2. Quantities realistic for unit type\n3. Commander names correct\n4. Organizational structure matches doctrine\n5. Equipment variants appropriate\n\nOutput: Accuracy assessment with:\n- Confidence score (0-100)\n- Historical issues found\n- Supporting evidence\n- Recommended corrections\n\nVerify now.",
      "validation_rules": [
        "All equipment checked for period accuracy",
        "Commander names verified",
        "Doctrine conformance assessed"
      ]
    },
    
    {
      "agent_id": "book_chapter_generator",
      "category": "output_generation",
      "version": "2.0.0",
      "role": "Generate MDBook chapters from unit TO&E files WITH WIKIPEDIA BLOCKING AND v3.0 SECTIONS",
      "inputs": ["unit_toe.json", "chapter_type", "style_guide"],
      "outputs": ["chapter.md"],
      "capabilities": [
        "Markdown generation",
        "Table formatting",
        "Narrative synthesis",
        "Equipment summary creation",
        "Wikipedia pre-publication check (NEW - CRITICAL)",
        "Supply/logistics section generation (NEW)",
        "Operational environment section generation (NEW)",
        "Infantry weapons extraction (NEW - Gap 8 fix)"
      ],
      "prompt_template": "You are generating a book chapter for {unit_designation}.\n\nüö® CRITICAL: WIKIPEDIA PRE-PUBLICATION CHECK (ANTHROPIC PATTERN: Error Prevention)\n\nBEFORE generating chapter, validate sources:\n\n1. Extract all source citations from {unit_toe.validation.sources}\n2. Check EACH source for forbidden patterns:\n   - 'wikipedia.org'\n   - 'wikipedia.com'\n   - 'wikia'\n   - 'fandom'\n   - 'wiki/' (generic wiki pattern)\n\n3. IF Wikipedia detected:\n   REJECT chapter generation immediately:\n   {\n     \"error\": \"WIKIPEDIA_IN_SOURCES\",\n     \"chapter\": \"{unit_designation}\",\n     \"forbidden_sources\": [{list_of_wikipedia_urls}],\n     \"message\": \"Chapter contains Wikipedia citations. Unit must be re-extracted with Tier 1/2 sources only.\",\n     \"recommendation\": \"Use document_parser v2.0 with source validation enabled\"\n   }\n\n4. IF sources clean: Proceed with generation\n\n---\n\nUnit data: {unit_toe}\nChapter type: {chapter_type}\nStyle: Professional military history, engaging narrative\n\nTask: Generate markdown chapter with ALL 18 REQUIRED SECTIONS (v3.0 Template):\n\n1. Header with unit designation and type\n2. Division/Unit Overview (brief narrative introduction)\n3. Command section (commander, HQ, strength)\n4. Personnel strength table\n5-8. Equipment sections with VARIANT BREAKDOWNS AND DETAIL SECTIONS (Armoured, Artillery, Armoured Cars, Infantry Weapons, Transport)\n9. Organizational breakdown (subordinate units)\n10. Supply status\n11. Tactical doctrine section\n12. Critical Equipment Shortages (mission-limiting deficiencies)\n13. Historical context for the quarter\n14. Wargaming data\n15. Data Quality & Known Gaps (confidence score, sources, gaps by priority)\n16. Conclusion with data source footer\n\nCRITICAL - Equipment Table Format with Detail Sections:\n\n## TANKS - Use variant breakdown table + detail section for EACH variant:\n\n| Category | Total | Operational | Readiness |\n|----------|-------|-------------|-----------|\n| **All Tanks** | **228** | **220** | **96.5%** |\n| **Medium Tanks (Cruisers)** | **69** | **66** | **95.7%** |\n| ‚Ü≥ A13 Mk II (Cruiser Mk IV) | 44 | 42 | 95.5% |\n| ‚Ü≥ A10 Cruiser Mk II | 10 | 10 | 100% |\n| ‚Ü≥ Matilda II (Infantry Tank) | 6 | 6 | 100% |\n\nThen IMMEDIATELY follow with detail sections:\n\n### A13 Mk II (Cruiser Mk IV) - 44 tanks\n[Specifications, combat performance, notes]\n\n### A10 Cruiser Mk II - 10 tanks\n[Specifications, combat performance, notes]\n\n### Matilda II (Infantry Tank) - 6 tanks\n[Specifications, combat performance, notes]\n\n## ARTILLERY - EVERY variant gets a detail section:\n\n| Type | Total | Operational | Caliber |\n| **Field Artillery** | **96** | **96** | - |\n| ‚Ü≥ Ordnance QF 25-pounder | 72 | 72 | 87.6mm |\n| ‚Ü≥ QF 4.5-inch Howitzer | 24 | 24 | 114mm |\n\nThen detail sections:\n\n### Ordnance QF 25-pounder - 72 guns\n[Range, projectile weight, rate of fire, combat performance]\n\n### QF 4.5-inch Howitzer - 24 guns\n[Range, projectile weight, rate of fire, combat performance]\n\n### Ordnance QF 2-pounder - 48 guns (anti-tank)\n[Penetration, rate of fire, role]\n\n### Bofors 40mm - 36 guns (anti-aircraft)\n[Rate of fire, ceiling, effectiveness]\n\n## ARMORED CARS - Separate section, EVERY variant detailed:\n\n| Type | Count | Role | Unit |\n| ‚Ü≥ Morris CS9 | 45 | Reconnaissance | 11th Hussars |\n\n### Morris CS9 - 45 vehicles\n[Armament, armor, crew, speed, combat record]\n\n### Rolls-Royce Armoured Car - 30 vehicles\n[Armament, armor, crew, speed, combat record]\n\n## TRANSPORT & VEHICLES - EXCLUDE Tanks and Armored Cars, EVERY variant detailed:\n\n| Category | Count | Percentage |\n| **Trucks** | **1,400** | 55.2% |\n| ‚Ü≥ Bedford QL | 800 | 3 ton |\n| ‚Ü≥ Bedford MW | 400 | 15 cwt |\n\n### Bedford QL - 800 trucks\n[Capacity, role, specifications]\n\n### Bedford MW - 400 trucks\n[Capacity, role, specifications]\n\n### BSA M20 - 200 motorcycles\n[Engine, use, specifications]\n\n### Universal Carrier (Bren Carrier) - 468 vehicles\n[Armament, armor, crew, speed, role]\n\nKEY RULES:\n- Show category totals in BOLD\n- Use ‚Ü≥ symbol for variant sub-items\n- EVERY variant in table MUST have detail section immediately after table\n- Tanks and Armored Cars excluded from Transport & Vehicles table\n- Detail sections include: specifications, combat performance/role, notes\n- WITW IDs in parentheses where available\n\nStyle requirements:\n- Professional but engaging\n- Bold key facts for scannability\n- Complete detail for ALL variants\n- Individual soldier positions for squads\n- Match MDBOOK_CHAPTER_TEMPLATE.md exactly\n\nGenerate chapter now.",
      "validation_rules": [
        "Wikipedia pre-publication check MUST pass (CRITICAL - BLOCKING)",
        "All 18 sections present (v3.0: includes Section 8 Supply & Logistics, Section 9 Operational Environment)",
        "Section 8 (Supply & Logistics) MUST extract from supply_logistics field",
        "Section 9 (Operational Environment) MUST extract from weather_environment field",
        "Infantry Weapons section MUST extract from top_3_infantry_weapons (Gap 8 fix)",
        "Tables properly formatted with variant breakdowns",
        "EVERY equipment variant MUST have detail section",
        "Cross-references valid",
        "NO Wikipedia sources in bibliography",
        "Schema version must be 3.0"
      ],
      "anthropic_patterns_applied": [
        "Error Prevention: Wikipedia validation blocks chapter generation",
        "Stopping Conditions: Immediate rejection if Wikipedia detected",
        "Clear Examples: Equipment table format with detail sections (in prompt)",
        "Tool Design: Explicit section extraction requirements"
      ]
    },

    {
      "agent_id": "scenario_exporter",
      "category": "output_generation",
      "version": "2.0.0",
      "role": "Export unit data for wargaming scenarios WITH SUPPLY STATES AND WEATHER",
      "inputs": ["unit_toe.json", "scenario_format", "scenario_date"],
      "outputs": ["scenario.{format}"],
      "capabilities": [
        "Multi-format export",
        "OOB generation",
        "Scenario balancing",
        "WITW integration",
        "Supply state export (NEW - CRITICAL FOR SCENARIOS)",
        "Weather conditions export (NEW - CRITICAL FOR SCENARIOS)",
        "Operational readiness calculation (NEW)"
      ],
      "prompt_template": "You are creating a wargaming scenario from unit data.\n\nUnit: {unit_toe}\nFormat: {format}\nScenario type: {scenario_type}\nScenario date: {scenario_date}\n\nTask: Export unit data in requested format WITH v3.0 enhancements:\n\n**For WITW CSV (ENHANCED v3.0)**:\n- Map each equipment item to WITW ID\n- Create force pool entries\n- Set experience/morale levels\n- Add special rules\n- **NEW: Add supply state columns**:\n  - fuel_reserves_days\n  - ammunition_days\n  - water_reserves_days\n  - operational_readiness_percentage\n- **NEW: Add weather header**:\n  - temperature_range (affects unit performance)\n  - visibility (sandstorms = reduced)\n  - storm_probability (for turn-based events)\n  - terrain_effects (mobility modifiers)\n\n**For generic JSON (ENHANCED v3.0)**:\n- Include all equipment with counts\n- Add wargaming stats\n- Provide setup recommendations\n- Include victory conditions\n- **NEW: Supply state object**:\n  ```json\n  \"supply_state\": {\n    \"fuel_days\": {fuel_reserves_days},\n    \"ammo_days\": {ammunition_days},\n    \"water_days\": {calculated_from_capacity},\n    \"operational_radius_km\": {operational_radius_km},\n    \"supply_status\": \"{qualitative_assessment}\",\n    \"readiness\": {percentage}\n  }\n  ```\n- **NEW: Weather conditions object**:\n  ```json\n  \"weather\": {\n    \"quarter\": \"{season_quarter}\",\n    \"temperature_min_c\": {temp_min},\n    \"temperature_max_c\": {temp_max},\n    \"terrain\": \"{terrain_type}\",\n    \"storm_frequency\": {storm_days_per_month},\n    \"visibility\": \"{excellent|good|poor based on weather}\",\n    \"operational_impact\": \"{narrative_description}\"\n  }\n  ```\n\n**Operational Readiness Calculation**:\n- Calculate from equipment operational counts\n- Factor in supply status (low fuel/ammo = reduced readiness)\n- Factor in environmental stress (extreme heat = reduced efficiency)\n- Output as percentage (0-100%)\n\n**Example WITW CSV Row (v3.0)**:\nunit_id,designation,strength,tanks,artillery,fuel_days,ammo_days,water_days,readiness_pct,temp_max,visibility\ngermany_1941q2_dak,Deutsches Afrikakorps,45000,228,120,6.5,8,7,92,35,good\n\n**Example Generic JSON (v3.0)**:\n{\n  \"scenario\": \"Operation Battleaxe\",\n  \"date\": \"1941-06-15\",\n  \"units\": [\n    {\n      \"unit_id\": \"germany_1941q2_dak\",\n      \"oob\": {equipment_data},\n      \"supply_state\": {fuel/ammo/water days},\n      \"weather\": {environmental_conditions},\n      \"starting_position\": \"Halfaya Pass\",\n      \"victory_objectives\": [...]\n    }\n  ]\n}\n\nOutput: Scenario file in requested format with v3.0 supply and weather data.\n\nGenerate now.",
      "validation_rules": [
        "All equipment mapped to game IDs",
        "Format specification followed",
        "Scenario balanced",
        "Supply state data included (v3.0 REQUIRED)",
        "Weather conditions included (v3.0 REQUIRED)",
        "Operational readiness calculated correctly",
        "WITW CSV has supply columns: fuel_days, ammo_days, water_days, readiness_pct",
        "Generic JSON has supply_state and weather objects"
      ],
      "anthropic_patterns_applied": [
        "Clear Examples: Complete CSV row and JSON structure",
        "Tool Design: Explicit column/field requirements",
        "Validation: Scenario must be playable with supply constraints"
      ]
    },
    
    {
      "agent_id": "sql_populator",
      "category": "output_generation",
      "role": "Generate SQL INSERT statements for database",
      "inputs": ["unit_toe_files[]", "db_schema"],
      "outputs": ["insert_statements.sql"],
      "capabilities": [
        "SQL generation",
        "Relationship mapping",
        "Foreign key management",
        "Batch insert optimization"
      ],
      "prompt_template": "You are generating SQL INSERT statements from unit TO&E files.\n\nUnits: {unit_files}\nDatabase schema: {db_schema}\n\nTask: Generate SQL to populate:\n\nTables:\n- units (unit_id, designation, type, parent_id, quarter, nation)\n- commanders (commander_id, name, rank, unit_id)\n- personnel (unit_id, officers, ncos, enlisted)\n- equipment (unit_id, equipment_type, variant, count, witw_id)\n- weapons (unit_id, weapon_name, count, weapon_type)\n- vehicles (unit_id, vehicle_type, variant, count)\n- individual_positions (unit_id, position_num, rank, weapon, ammo)\n\nEnsure:\n- Proper foreign key relationships\n- Batch inserts for performance\n- Handle NULL values appropriately\n- Include indexes for common queries\n\nGenerate SQL now.",
      "validation_rules": [
        "All relationships preserved",
        "No orphaned records",
        "Indexes created"
      ]
    },

    {
      "agent_id": "qa_auditor",
      "category": "quality_assurance",
      "role": "Orchestrator for project-level QA - coordinates specialized sub-tasks",
      "workflow_pattern": "orchestrator-workers",
      "inputs": ["project_directory", "audit_scope"],
      "outputs": ["audit_plan.json", "gap_tracker.md", "quality_report.json", "compliance_report.json", "project_dashboard.md"],
      "capabilities": [
        "Task decomposition and delegation",
        "Progress tracking",
        "Report aggregation",
        "Pattern identification across sub-task results"
      ],
      "prompt_template": "You are the QA Auditor orchestrator for the North Africa TO&E project.\n\n**YOUR ROLE**: Break down quality assurance into specialized sub-tasks, delegate to workers, and aggregate results.\n\n**PROJECT CONTEXT**:\n- Project directory: {project_directory}\n- Total units planned: 213\n- Completed units: {completed_count}\n- Schema: unified_toe_schema.json v1.0.0\n- Template: MDBOOK_CHAPTER_TEMPLATE.md v2.0\n\n**AUDIT WORKFLOW** (Orchestrator-Workers Pattern):\n\nSTEP 1: **SCAN & INVENTORY**\n- Scan `{project_directory}/units/` for JSON files\n- Scan `{project_directory}/north_africa_book/src/` for chapter files\n- Create inventory:\n  ```json\n  {\n    \"units_found\": 18,\n    \"chapters_found\": 18,\n    \"json_files\": [\"britain_1940q2_7th_armoured_division_toe.json\", ...],\n    \"chapter_files\": [\"chapter_7th_armoured.md\", ...]\n  }\n  ```\n\nSTEP 2: **DELEGATE TO SPECIALIZED WORKERS**\n\nYou will coordinate 5 specialized sub-tasks:\n\na) **gap_analyzer**\n   - Task: Extract `validation.known_gaps` from each JSON file\n   - Input: List of JSON files\n   - Output: Structured gap data per unit\n   - Tool: Read JSON, extract gaps, categorize by severity\n\nb) **template_checker**\n   - Task: Validate each MDBook chapter against template standard\n   - Input: Chapter file + template requirements\n   - Output: Compliance score + violations list\n   - Tool: Read chapter, check sections/format\n\nc) **cross_validator**\n   - Task: Compare JSON data vs MDBook chapter for consistency\n   - Input: JSON + corresponding chapter\n   - Output: Discrepancy report\n   - Tool: Read both, compare key fields\n\nd) **metrics_calculator**\n   - Task: Calculate completion and quality metrics\n   - Input: All unit data + gap analysis results\n   - Output: Statistics and scores\n   - Tool: Aggregate data, compute percentages\n\ne) **report_generator**\n   - Task: Generate final QA reports from aggregated results\n   - Input: Results from workers a-d\n   - Output: 4 report files (GAP_TRACKER.md, QUALITY_REPORT.json, etc.)\n   - Tool: Format and write reports\n\nSTEP 3: **ORCHESTRATION PLAN**\n\nCreate execution plan:\n```json\n{\n  \"execution_order\": [\n    {\"task\": \"gap_analyzer\", \"parallel\": false, \"inputs\": \"all_json_files\"},\n    {\"task\": \"template_checker\", \"parallel\": true, \"inputs\": \"all_chapter_files\"},\n    {\"task\": \"cross_validator\", \"parallel\": true, \"inputs\": \"json_chapter_pairs\"},\n    {\"task\": \"metrics_calculator\", \"parallel\": false, \"inputs\": \"gap_results + compliance_results\"},\n    {\"task\": \"report_generator\", \"parallel\": false, \"inputs\": \"all_worker_results\"}\n  ],\n  \"estimated_time\": \"5-10 minutes\",\n  \"parallelizable_steps\": [\"template_checker\", \"cross_validator\"]\n}\n```\n\nSTEP 4: **EXECUTE & MONITOR**\n\nFor each sub-task:\n1. Provide clear, minimal inputs\n2. Execute worker task\n3. Validate worker output format\n4. Handle errors gracefully (log and continue)\n5. Aggregate successful results\n\nSTEP 5: **AGGREGATE & REPORT**\n\nGenerate final outputs:\n1. **GAP_TRACKER.md** - All gaps across all units with priorities\n2. **QUALITY_REPORT.json** - Quantitative metrics (completion %, confidence scores)\n3. **COMPLIANCE_REPORT.json** - Template adherence by chapter\n4. **PROJECT_DASHBOARD.md** - Executive summary with recommendations\n\n**QUALITY STANDARDS**:\n- Minimum confidence per unit: 75%\n- Maximum critical gaps per unit: 0\n- Template compliance target: 100%\n- JSON-Chapter consistency target: 100%\n\n**ERROR HANDLING**:\n- If JSON file unreadable: Log error, mark unit as \"needs_review\", continue\n- If chapter missing: Note in compliance report, continue\n- If validation fails: Document specific failure, suggest corrective action\n\n**OUTPUT REQUIREMENTS**:\n- All reports must be actionable (specific files, line numbers, corrective actions)\n- Gap severity must use consistent classification (critical/important/moderate/low)\n- Metrics must be verifiable (show calculation method)\n- Recommendations must be prioritized by impact\n\n**START ORCHESTRATION**: Begin with Step 1 (Scan & Inventory) and create the execution plan.",
      "validation_rules": [
        "Orchestration plan created before execution",
        "Each sub-task has clear inputs/outputs",
        "Error handling specified for each step",
        "Final reports are comprehensive and actionable"
      ],
      "sub_tasks": {
        "gap_analyzer": {
          "role": "Extract and categorize data gaps from unit JSON files",
          "inputs": ["json_file_list"],
          "outputs": ["gap_data.json"],
          "prompt": "Extract `validation.known_gaps` from each JSON file: {json_files}\n\nFor each gap, classify:\n- Severity: critical|important|moderate|low\n- Category: commanders|equipment_variants|subordinate_units|personnel|supply_status|witw_ids\n\nOutput format:\n```json\n[\n  {\n    \"unit\": \"7th Armoured Division\",\n    \"nation\": \"britain\",\n    \"quarter\": \"1940-Q2\",\n    \"confidence\": 85,\n    \"gaps\": [\n      {\"gap\": \"7th Armoured Brigade commander name not confirmed\", \"severity\": \"important\", \"category\": \"commanders\"},\n      {\"gap\": \"Exact A9 vs A10 distribution\", \"severity\": \"moderate\", \"category\": \"equipment_variants\"}\n    ]\n  }\n]\n```"
        },
        "template_checker": {
          "role": "Validate MDBook chapter against template standard",
          "inputs": ["chapter_file", "template_requirements"],
          "outputs": ["compliance_score.json"],
          "prompt": "Check chapter {chapter_file} against template requirements:\n\nRequired sections: {required_sections}\nEquipment format rules: {equipment_rules}\n\nVerify:\n1. All required sections present\n2. Equipment tables use **bold** categories, ‚Ü≥ variant sub-items\n3. EVERY variant has detail section\n4. Armored cars separate from transport\n5. No tanks/armored cars in transport table\n\nOutput:\n```json\n{\n  \"chapter\": \"chapter_7th_armoured.md\",\n  \"compliance_score\": 95,\n  \"missing_sections\": [],\n  \"format_violations\": [\"Missing detail section for Bedford MW\"],\n  \"recommendations\": [\"Add detail section for Bedford MW after table\"]\n}\n```"
        },
        "cross_validator": {
          "role": "Verify JSON and MDBook chapter consistency",
          "inputs": ["json_file", "chapter_file"],
          "outputs": ["discrepancies.json"],
          "prompt": "Compare {json_file} with {chapter_file}.\n\nCheck:\n1. Tank totals match\n2. Artillery totals match\n3. All JSON variants appear in chapter\n4. Personnel totals match\n5. Commander names match\n6. Confidence scores match\n\nOutput discrepancies ONLY:\n```json\n{\n  \"unit\": \"7th Armoured Division\",\n  \"discrepancies\": [\n    {\"field\": \"tanks.medium.A13_Mk_II\", \"json\": 44, \"chapter\": 42, \"severity\": \"major\"}\n  ]\n}\n```\n\nIf no discrepancies: `{\"unit\": \"...\", \"discrepancies\": []}`"
        },
        "metrics_calculator": {
          "role": "Calculate project-level quality metrics",
          "inputs": ["gap_data.json", "compliance_scores.json"],
          "outputs": ["metrics.json"],
          "prompt": "Calculate metrics from gap data: {gap_data} and compliance scores: {compliance_scores}\n\nCompute:\n1. Completion: units completed / 213\n2. Avg confidence score\n3. Units below 80% confidence\n4. Gaps by category counts\n5. Compliance score distribution\n\nOutput:\n```json\n{\n  \"completion\": {\"completed\": 18, \"total\": 213, \"percent\": 8.5},\n  \"confidence\": {\"average\": 85, \"below_threshold\": 3},\n  \"gaps\": {\"critical\": 0, \"important\": 65, \"moderate\": 25, \"low\": 250},\n  \"compliance\": {\"100_percent\": 12, \"95_99_percent\": 5, \"below_95\": 1}\n}\n```"
        },
        "report_generator": {
          "role": "Generate final QA reports from aggregated results",
          "inputs": ["gap_data.json", "compliance_scores.json", "discrepancies.json", "metrics.json"],
          "outputs": ["GAP_TRACKER.md", "QUALITY_REPORT.json", "COMPLIANCE_REPORT.json", "PROJECT_DASHBOARD.md"],
          "prompt": "Generate 4 QA reports from results:\n\nInputs:\n- Gap data: {gap_data}\n- Compliance: {compliance_scores}\n- Discrepancies: {discrepancies}\n- Metrics: {metrics}\n\nCreate:\n1. **GAP_TRACKER.md**: All gaps with priorities, patterns, research recommendations\n2. **QUALITY_REPORT.json**: Quantitative metrics, confidence distribution, completion stats\n3. **COMPLIANCE_REPORT.json**: Per-chapter scores, violations, corrective actions\n4. **PROJECT_DASHBOARD.md**: Executive summary, health status, critical issues, next priorities\n\nEnsure reports are:\n- Actionable (specific files/lines)\n- Prioritized (critical first)\n- Evidence-based (show data sources)\n- Forward-looking (recommendations)"
        }
      }
    },

    {
      "agent_id": "witw_equipment_mapper",
      "category": "data_integration",
      "role": "Orchestrator for WITW equipment mapping - coordinates specialized sub-tasks for high-confidence mappings",
      "workflow_pattern": "orchestrator-workers",
      "inputs": ["equipment_list.json", "witw_database", "canonical_equipment_master.json", "nation", "quarter"],
      "outputs": ["equipment_witw_mappings.json", "canonical_equipment.json", "custom_ids.json", "mapping_quality_report.json"],
      "capabilities": [
        "Task decomposition and delegation",
        "Multi-stage confidence scoring",
        "Cross-nation deduplication",
        "Custom ID assignment",
        "Historical validation"
      ],
      "prompt_template": "You are the WITW Equipment Mapper orchestrator for mapping equipment names to War in the West game database IDs.\n\n**YOUR ROLE**: Break down equipment mapping into specialized sub-tasks, delegate to workers, and aggregate high-confidence results.\n\n**PROJECT CONTEXT**:\n- Equipment list: {equipment_list}\n- WITW database: {witw_database_path}\n- Nation: {nation}\n- Quarter: {quarter}\n- Iteration #2 baseline: 22.8% success rate (107/469 mapped)\n- Target: 70%+ high-confidence mappings (‚â•90%)\n\n**CRITICAL REQUIREMENTS**:\n1. **Higher confidence ratings** - Achieve 70%+ high-confidence (‚â•90%) mappings\n2. **Zero duplicates** - Prevent duplicate entries for same vehicle with name variants\n3. **Cross-nation awareness** - Handle equipment used by multiple nations (M4 Sherman, Universal Carrier)\n4. **Historical validation** - Verify equipment dates, nation usage, role\n\n**MAPPING WORKFLOW** (Orchestrator-Workers Pattern):\n\nSTEP 1: **SCAN & INVENTORY**\n- Load equipment list from unit JSONs: {equipment_list}\n- Load WITW database: {witw_database_path}\n- Load iteration #2 results: {iteration2_mappings}\n- Create inventory:\n  ```json\n  {\n    \"total_equipment\": 469,\n    \"unique_names\": 450,\n    \"nations\": [\"german\", \"british\", \"italian\", \"american\", \"french\"],\n    \"categories\": [\"tanks\", \"artillery\", \"vehicles\", \"aircraft\", \"weapons\"]\n  }\n  ```\n\nSTEP 2: **DELEGATE TO SPECIALIZED WORKERS**\n\nYou will coordinate 5 specialized sub-tasks:\n\na) **name_normalizer**\n   - Task: Normalize all equipment names to canonical form\n   - Input: Raw equipment names from JSONs\n   - Output: Normalized names with variants mapped\n   - Tool: Strip special chars, expand abbreviations, handle suffixes\n\nb) **fuzzy_matcher**\n   - Task: Multi-stage fuzzy matching against WITW database\n   - Input: Normalized names + WITW database\n   - Output: Candidate matches with confidence scores\n   - Tool: Token matching, Levenshtein distance, caliber awareness\n\nc) **cross_nation_deduplicator**\n   - Task: Identify same equipment used by multiple nations\n   - Input: All equipment entries across nations\n   - Output: Canonical equipment with nation variant mappings\n   - Tool: Cross-reference, role matching, specification comparison\n\nd) **custom_id_generator**\n   - Task: Assign custom IDs to unmapped equipment\n   - Input: Equipment without WITW matches\n   - Output: Custom IDs (100000+ range) with specifications\n   - Tool: ID allocation, category-based prefixes\n\ne) **mapping_validator**\n   - Task: Validate all mappings against historical context\n   - Input: All mapping candidates\n   - Output: Final validated mappings with confidence scores\n   - Tool: Date checking, nation verification, role validation\n\nSTEP 3: **ORCHESTRATION PLAN**\n\nCreate execution plan:\n```json\n{\n  \"execution_order\": [\n    {\"task\": \"name_normalizer\", \"parallel\": false, \"inputs\": \"all_equipment_names\"},\n    {\"task\": \"fuzzy_matcher\", \"parallel\": true, \"inputs\": \"normalized_names_by_category\"},\n    {\"task\": \"cross_nation_deduplicator\", \"parallel\": false, \"inputs\": \"all_match_candidates\"},\n    {\"task\": \"custom_id_generator\", \"parallel\": false, \"inputs\": \"unmapped_equipment\"},\n    {\"task\": \"mapping_validator\", \"parallel\": false, \"inputs\": \"all_mappings\"}\n  ],\n  \"estimated_time\": \"10-15 minutes\",\n  \"parallelizable_steps\": [\"fuzzy_matcher\"]\n}\n```\n\nSTEP 4: **EXECUTE & MONITOR**\n\nFor each sub-task:\n1. Provide clear, minimal inputs\n2. Execute worker task\n3. Validate worker output format\n4. Handle errors gracefully (log and flag for manual review)\n5. Aggregate successful results\n6. Track confidence distribution\n\nSTEP 5: **AGGREGATE & REPORT**\n\nGenerate final outputs:\n1. **equipment_witw_mappings.json** - All equipment with WITW IDs and confidence scores\n2. **canonical_equipment.json** - Canonical entries with all name variants\n3. **custom_ids.json** - Custom IDs for equipment not in WITW database\n4. **mapping_quality_report.json** - Metrics, confidence distribution, manual review queue\n\n**CONFIDENCE SCORING SYSTEM**:\n- **100%** - Exact match (name + caliber + variant)\n- **95-99%** - Name + caliber match with minor variant differences\n- **90-94%** - High fuzzy match (>85% similarity) + caliber/role match\n- **75-89%** - Medium fuzzy match + partial context match\n- **<75%** - Low confidence ‚Üí FLAG FOR MANUAL REVIEW\n- **No match** - Assign custom ID (100000+ range)\n\n**DEDUPLICATION RULES**:\n1. Create canonical equipment entry (e.g., \"Sherman M4\")\n2. Map all variants to canonical:\n   - \"M4 Sherman\" ‚Üí \"Sherman M4\" (canonical)\n   - \"Sherman I (M4)\" ‚Üí \"Sherman M4\" (canonical)\n   - \"Sherman M4A1\" ‚Üí separate canonical (different variant)\n3. Track nation-specific names:\n   - USA: \"M4 Sherman\"\n   - Britain: \"Sherman I\" or \"Sherman Mk I\"\n   - France: \"M4 Sherman\" (Lend-Lease)\n4. Single WITW ID per canonical equipment\n5. Cross-reference table for nation-specific names\n\n**ERROR HANDLING**:\n- If normalization fails: Log error, use raw name, flag for review\n- If no WITW match found: Assign custom ID, document specifications\n- If multiple high-confidence matches: Flag for manual disambiguation\n- If validation fails: Document specific failure, reduce confidence score\n\n**QUALITY STANDARDS**:\n- Minimum 70% high-confidence mappings (‚â•90%)\n- Maximum 20% manual review queue\n- Zero false positives (wrong equipment matched)\n- Zero duplicates (same equipment multiple entries)\n- All 241 unmapped items get custom IDs\n\n**OUTPUT REQUIREMENTS**:\n- All mappings must include: canonical_name, witw_id (or custom_id), confidence, nation_variants, mapping_source\n- Manual review queue must show: equipment_name, best_match_candidate, confidence, reason_for_review\n- Custom IDs must include: custom_id, witw_equivalent, specifications, estimated_quantity\n- Quality report must show: total_mapped, confidence_distribution, false_positive_check, duplication_check\n\n**START ORCHESTRATION**: Begin with Step 1 (Scan & Inventory) and create the execution plan.",
      "validation_rules": [
        "Orchestration plan created before execution",
        "Each sub-task has clear inputs/outputs",
        "Confidence scores follow defined system (100% ‚Üí 0%)",
        "Deduplication applied to all equipment",
        "All unmapped items receive custom IDs",
        "Final mappings validated against historical context",
        "Quality report includes metrics and distribution"
      ],
      "sub_tasks": {
        "name_normalizer": {
          "role": "Normalize equipment names to canonical form, handle variants",
          "inputs": ["raw_equipment_names"],
          "outputs": ["normalized_names.json", "variant_mappings.json"],
          "prompt": "Normalize equipment names from raw input: {raw_equipment_names}\n\n**NORMALIZATION RULES**:\n\n1. **Strip special characters**:\n   - Replace underscores with spaces: \"Panzer_III_H\" ‚Üí \"Panzer III H\"\n   - Remove trailing/leading spaces\n   - Normalize multiple spaces to single space\n\n2. **Expand abbreviations**:\n   - GMC ‚Üí Gun Motor Carriage\n   - Mk ‚Üí Mark\n   - Ausf ‚Üí Ausf√ºhrung (but keep as \"Ausf\" for German)\n   - Mod ‚Üí Modello (Italian), Mod√®le (French)\n   - AT ‚Üí Anti-Tank\n   - AA ‚Üí Anti-Aircraft\n\n3. **Handle variant suffixes**:\n   - Capture Ausf/Mk/Serie/Mod/M designations\n   - Example: \"Panzer III Ausf H\" ‚Üí base: \"Panzer III\", variant: \"Ausf H\"\n   - Example: \"Sherman M4A1\" ‚Üí base: \"Sherman M4\", variant: \"A1\"\n\n4. **Standardize nation prefixes**:\n   - Remove \"german_\", \"british_\", \"italian_\" prefixes\n   - Store nation separately\n\n5. **Caliber extraction**:\n   - Extract caliber from name: \"75mm M1897\" ‚Üí caliber: 75mm, base: \"M1897\"\n   - Normalize formats: \"7.5cm\" ‚Üí \"75mm\", \"3.7-inch\" ‚Üí \"94mm\"\n\n6. **Create canonical form**:\n   - Format: \"[Base Name] [Variant] [Caliber]\"\n   - Example: \"Panzer III Ausf H\" (canonical)\n   - Example: \"Sherman M4\" (canonical), \"Sherman M4A1\" (separate canonical)\n\n**OUTPUT FORMAT**:\n```json\n{\n  \"normalized_equipment\": [\n    {\n      \"raw_name\": \"Panzer_III_H\",\n      \"canonical_name\": \"Panzer III Ausf H\",\n      \"base_name\": \"Panzer III\",\n      \"variant\": \"Ausf H\",\n      \"nation\": \"german\",\n      \"category\": \"tank\",\n      \"caliber\": null,\n      \"alternate_names\": [\"Panzer IIIh\", \"Pz.Kpfw. III Ausf. H\"]\n    },\n    {\n      \"raw_name\": \"M3_GMC\",\n      \"canonical_name\": \"M3 75mm Gun Motor Carriage\",\n      \"base_name\": \"M3 GMC\",\n      \"variant\": null,\n      \"nation\": \"american\",\n      \"category\": \"tank_destroyer\",\n      \"caliber\": \"75mm\",\n      \"alternate_names\": [\"M3 75mm GMC\", \"75mm GMC M3\"]\n    },\n    {\n      \"raw_name\": \"Sherman M4\",\n      \"canonical_name\": \"Sherman M4\",\n      \"base_name\": \"Sherman\",\n      \"variant\": \"M4\",\n      \"nation\": \"american\",\n      \"category\": \"tank\",\n      \"caliber\": \"75mm\",\n      \"alternate_names\": [\"M4 Sherman\", \"Sherman I\", \"Sherman Mk I\"]\n    }\n  ]\n}\n```\n\n**HANDLE EDGE CASES**:\n- Multiple calibers in name: Prioritize main armament\n- Ambiguous variants: Flag for disambiguation\n- Generic names (\"Field\", \"Transport\"): Flag for manual review\n- Special characters (√º, √©, etc.): Preserve but provide ASCII alternatives"
        },
        "fuzzy_matcher": {
          "role": "Multi-stage fuzzy matching against WITW database with confidence scoring",
          "inputs": ["normalized_names.json", "witw_database"],
          "outputs": ["match_candidates.json"],
          "prompt": "Perform multi-stage fuzzy matching for equipment: {normalized_names}\n\nWITW Database: {witw_database}\n\n**MATCHING STAGES**:\n\n**Stage 1: Exact Match (100% confidence)**\n- Compare canonical_name with WITW name (case-insensitive)\n- Include alternate_names comparison\n- If exact match found ‚Üí confidence: 100%\n\n**Stage 2: Name + Caliber Match (95-99% confidence)**\n- Match base_name + caliber\n- Allow minor variant differences (Ausf H vs Ausf h)\n- Example: \"Panzer III Ausf H\" + \"50mm\" matches \"Panzer IIIh 50mm\"\n- Confidence: 95-99% based on variant similarity\n\n**Stage 3: High Fuzzy Match (90-94% confidence)**\n- Token-based matching (split on spaces)\n- Weight tokens by importance:\n  - Base name: 40%\n  - Caliber: 30%\n  - Variant: 20%\n  - Nation: 10%\n- Levenshtein distance for token similarity\n- Example: \"Panzer III\" matches \"Panzer IIIh\" (high similarity)\n- Confidence: 90-94% if >85% token match + caliber/role match\n\n**Stage 4: Medium Fuzzy Match (75-89% confidence)**\n- Lower token match threshold (70-85%)\n- Partial caliber match (e.g., 75mm vs 76mm)\n- Role-based filtering (tank matches tank, not armored car)\n- Confidence: 75-89% based on similarity score\n\n**Stage 5: Low Confidence (<75%)**\n- Matches below 75% similarity\n- FLAG FOR MANUAL REVIEW\n- Provide best candidate but mark as uncertain\n\n**Stage 6: No Match**\n- No candidates above 50% similarity\n- Mark for custom ID assignment\n\n**SCORING ENHANCEMENTS**:\n\n1. **Caliber boost**:\n   - If caliber exact match: +15% confidence\n   - If caliber close match (¬±5mm): +10% confidence\n\n2. **Role verification**:\n   - Verify equipment role matches (tank, artillery, vehicle)\n   - If role mismatch: -30% confidence (prevent false positives)\n   - Example: \"BSA M20\" (motorcycle) should NOT match \"BT-42\" (tank)\n\n3. **Nation consistency**:\n   - Verify equipment was used by nation in quarter\n   - If nation mismatch: -20% confidence\n   - Exception: Captured/Lend-Lease equipment\n\n4. **Variant suffix handling**:\n   - Ausf/Mk/Serie/Mod suffixes should match closely\n   - \"Ausf H\" vs \"Ausf G\" = different variants (confidence penalty)\n   - \"Ausf H\" vs \"Ausf h\" = same variant (no penalty)\n\n**OUTPUT FORMAT**:\n```json\n{\n  \"match_candidates\": [\n    {\n      \"canonical_name\": \"Panzer III Ausf H\",\n      \"witw_match\": {\n        \"witw_id\": 187,\n        \"witw_name\": \"Panzer IIIh\",\n        \"confidence\": 98,\n        \"stage\": \"name_caliber_match\",\n        \"match_factors\": {\n          \"name_similarity\": 95,\n          \"caliber_match\": \"exact\",\n          \"variant_match\": \"close\",\n          \"role_match\": true,\n          \"nation_verified\": true\n        }\n      },\n      \"alternate_candidates\": []\n    },\n    {\n      \"canonical_name\": \"BSA M20\",\n      \"witw_match\": null,\n      \"confidence\": 0,\n      \"stage\": \"no_match\",\n      \"reason\": \"No WITW entry for motorcycles, requires custom ID\"\n    },\n    {\n      \"canonical_name\": \"M3 75mm Gun Motor Carriage\",\n      \"witw_match\": {\n        \"witw_id\": 2126,\n        \"witw_name\": \"M3 75mm GMC\",\n        \"confidence\": 100,\n        \"stage\": \"exact_match\"\n      }\n    }\n  ],\n  \"summary\": {\n    \"exact_matches\": 120,\n    \"high_confidence\": 180,\n    \"medium_confidence\": 90,\n    \"low_confidence\": 40,\n    \"no_match\": 39\n  }\n}\n```\n\n**VALIDATION CHECKS**:\n- Prevent obvious false positives (role mismatch)\n- Flag ambiguous matches (multiple high-confidence candidates)\n- Document matching logic for each candidate"
        },
        "cross_nation_deduplicator": {
          "role": "Identify and deduplicate equipment used by multiple nations",
          "inputs": ["match_candidates.json", "all_nation_equipment"],
          "outputs": ["canonical_equipment.json", "deduplication_report.json"],
          "prompt": "Deduplicate equipment across nations: {match_candidates}\n\nAll equipment by nation: {all_nation_equipment}\n\n**DEDUPLICATION WORKFLOW**:\n\n**Step 1: Identify Cross-Nation Equipment**\n\nCommon equipment used by multiple nations:\n- **M4 Sherman**: USA (M4 Sherman), Britain (Sherman I/Mk I), France (M4 Sherman Lend-Lease)\n- **M3 Stuart**: USA (M3 Stuart), Britain (Stuart I/Honey), France (M3 Stuart)\n- **Universal Carrier**: Britain, Canada, Australia, New Zealand, India, South Africa\n- **Valentine**: Britain, Canada, Soviet Union (Lend-Lease)\n- **Crusader**: Britain, Australia, New Zealand, South Africa\n- **Matilda**: Britain, Australia\n- **QF 25-pounder**: Britain, Canada, Australia, New Zealand, India, South Africa\n- **Bofors 40mm**: Used by ALL nations\n- **Captured equipment**: Italian M13/40 used by British, German Panzer III used by Italians\n\n**Step 2: Create Canonical Equipment Entries**\n\nFor each unique piece of equipment:\n```json\n{\n  \"canonical_id\": \"CANON_M4_SHERMAN\",\n  \"canonical_name\": \"Sherman M4\",\n  \"base_type\": \"Medium Tank\",\n  \"primary_nation\": \"american\",\n  \"witw_id\": 2025,\n  \"specifications\": {\n    \"main_armament\": \"75mm M3 Gun\",\n    \"armor_front\": \"51mm\",\n    \"crew\": 5,\n    \"weight\": \"30.3 tons\"\n  },\n  \"nation_variants\": [\n    {\n      \"nation\": \"american\",\n      \"local_name\": \"M4 Sherman\",\n      \"alternate_names\": [\"Sherman M4\", \"Medium Tank M4\"]\n    },\n    {\n      \"nation\": \"british\",\n      \"local_name\": \"Sherman I\",\n      \"alternate_names\": [\"Sherman Mk I\", \"Sherman I (M4)\"]\n    },\n    {\n      \"nation\": \"french\",\n      \"local_name\": \"M4 Sherman\",\n      \"note\": \"Lend-Lease from USA, 1943 onwards\"\n    }\n  ],\n  \"deduplication_rule\": \"Same base variant M4 with 75mm gun, multiple nation designations\"\n}\n```\n\n**Step 3: Handle Variant Differences**\n\n- **M4 vs M4A1**: Different canonical entries (hull design difference)\n- **M4A1 vs M4A1 (76)**: Different canonical entries (gun difference)\n- **Sherman I vs Sherman II**: Map to M4 vs M4A1 respectively\n- **Sherman V**: Maps to M4A4 (different engine)\n\n**Step 4: Create Deduplication Mappings**\n\n```json\n{\n  \"deduplication_mappings\": [\n    {\n      \"canonical_id\": \"CANON_M4_SHERMAN\",\n      \"duplicate_entries\": [\n        {\"nation\": \"american\", \"name\": \"M4 Sherman\"},\n        {\"nation\": \"american\", \"name\": \"Sherman M4\"},\n        {\"nation\": \"british\", \"name\": \"Sherman I\"},\n        {\"nation\": \"british\", \"name\": \"Sherman Mk I\"},\n        {\"nation\": \"british\", \"name\": \"Sherman I (M4)\"}\n      ],\n      \"witw_id\": 2025,\n      \"action\": \"merge_to_canonical\"\n    },\n    {\n      \"canonical_id\": \"CANON_UNIVERSAL_CARRIER\",\n      \"duplicate_entries\": [\n        {\"nation\": \"british\", \"name\": \"Universal Carrier\"},\n        {\"nation\": \"british\", \"name\": \"Bren Carrier\"},\n        {\"nation\": \"british\", \"name\": \"Bren Mortar Carrier\"},\n        {\"nation\": \"canadian\", \"name\": \"Universal Carrier\"},\n        {\"nation\": \"australian\", \"name\": \"Universal Carrier\"}\n      ],\n      \"witw_id\": 2117,\n      \"action\": \"merge_to_canonical\",\n      \"note\": \"Carrier variants (Bren, Mortar) are modifications of base Universal Carrier\"\n    }\n  ]\n}\n```\n\n**Step 5: Handle Captured/Lend-Lease Equipment**\n\n```json\n{\n  \"canonical_id\": \"CANON_PANZER_III_AUSF_H\",\n  \"primary_nation\": \"german\",\n  \"witw_id\": 187,\n  \"captured_by\": [\n    {\n      \"nation\": \"italian\",\n      \"local_name\": \"Panzer III (German)\",\n      \"period\": \"1943\",\n      \"note\": \"Post-Italian armistice, used by RSI forces\"\n    },\n    {\n      \"nation\": \"british\",\n      \"local_name\": \"Captured Panzer III\",\n      \"period\": \"1940-1943\",\n      \"note\": \"Limited use of captured vehicles for evaluation\"\n    }\n  ]\n}\n```\n\n**OUTPUT FORMAT**:\n```json\n{\n  \"canonical_equipment\": [\n    {\n      \"canonical_id\": \"CANON_M4_SHERMAN\",\n      \"canonical_name\": \"Sherman M4\",\n      \"witw_id\": 2025,\n      \"nation_variants\": [...],\n      \"total_duplicate_entries\": 5\n    }\n  ],\n  \"deduplication_summary\": {\n    \"total_canonical_entries\": 350,\n    \"total_raw_entries\": 469,\n    \"duplicates_removed\": 119,\n    \"cross_nation_equipment\": 45\n  }\n}\n```\n\n**VALIDATION RULES**:\n- Verify all nation variants map to same WITW ID\n- Flag if specifications differ significantly (different actual equipment)\n- Handle variant suffixes carefully (M4 ‚â† M4A1)\n- Document all deduplication decisions"
        },
        "custom_id_generator": {
          "role": "Assign custom IDs to equipment not in WITW database",
          "inputs": ["unmapped_equipment"],
          "outputs": ["custom_ids.json"],
          "prompt": "Generate custom IDs for unmapped equipment: {unmapped_equipment}\n\n**CUSTOM ID SYSTEM**:\n\n**ID Range: 100000-199999** (avoids conflict with WITW IDs)\n\n**Category Prefixes**:\n- **100000-109999**: Tanks and armored fighting vehicles\n- **110000-119999**: Artillery (field, anti-tank, anti-aircraft)\n- **120000-129999**: Trucks and transport vehicles\n- **130000-139999**: Motorcycles and light vehicles\n- **140000-149999**: Halftracks and APCs\n- **150000-159999**: Specialized vehicles (recovery, workshop, command)\n- **160000-169999**: Aircraft (not in WITW)\n- **170000-179999**: Small arms and infantry weapons\n- **180000-189999**: Miscellaneous equipment\n\n**ID ASSIGNMENT ALGORITHM**:\n\n1. **Determine category** from equipment type\n2. **Check existing custom IDs** to avoid duplicates\n3. **Assign sequential ID** within category range\n4. **Document WITW equivalent** (closest match in game)\n5. **Record specifications** for future reference\n\n**OUTPUT FORMAT**:\n```json\n{\n  \"custom_equipment\": [\n    {\n      \"canonical_name\": \"FIAT 626 NLM\",\n      \"custom_id\": 120001,\n      \"category\": \"truck\",\n      \"nation\": \"italian\",\n      \"witw_equivalent\": \"Medium Truck\",\n      \"specifications\": {\n        \"payload\": \"3.32 tonnes\",\n        \"engine\": \"FIAT Tipo 326 65hp\",\n        \"max_speed\": \"64 km/h\",\n        \"crew\": 2\n      },\n      \"historical_context\": {\n        \"service_period\": \"1939-1943\",\n        \"production_total\": \"15000-20000\",\n        \"primary_use\": \"General cargo transport, North Africa\"\n      },\n      \"reason_not_in_witw\": \"Theater-specific variant not modeled in WITW\"\n    },\n    {\n      \"canonical_name\": \"BSA M20\",\n      \"custom_id\": 130001,\n      \"category\": \"motorcycle\",\n      \"nation\": \"british\",\n      \"witw_equivalent\": \"Reconnaissance Squad (abstracted)\",\n      \"specifications\": {\n        \"engine\": \"500cc single-cylinder\",\n        \"max_speed\": \"100 km/h\",\n        \"crew\": 1,\n        \"role\": \"Dispatch rider, reconnaissance\"\n      },\n      \"historical_context\": {\n        \"service_period\": \"1937-1955\",\n        \"production_total\": \"126000+\",\n        \"primary_use\": \"Military police, dispatch, reconnaissance\"\n      },\n      \"reason_not_in_witw\": \"WITW does not model individual motorcycles\"\n    },\n    {\n      \"canonical_name\": \"SdKfz 251\",\n      \"custom_id\": 140001,\n      \"category\": \"halftrack\",\n      \"nation\": \"german\",\n      \"witw_id_exists\": 100001,\n      \"note\": \"Already has fuzzy-matched custom ID from iteration #2, preserved\"\n    },\n    {\n      \"canonical_name\": \"M31 Tank Recovery Vehicle\",\n      \"custom_id\": 150001,\n      \"category\": \"recovery_vehicle\",\n      \"nation\": \"american\",\n      \"witw_equivalent\": \"Recovery Vehicle (abstracted)\",\n      \"specifications\": {\n        \"base_chassis\": \"M3 Lee/Grant\",\n        \"winch_capacity\": \"30 tons\",\n        \"crew\": 4,\n        \"armament\": \"None (turret removed)\"\n      },\n      \"historical_context\": {\n        \"service_period\": \"1942-1945\",\n        \"production_total\": \"~300\",\n        \"primary_use\": \"Tank recovery in field conditions\"\n      },\n      \"reason_not_in_witw\": \"Support vehicles abstracted in WITW logistics system\"\n    }\n  ],\n  \"summary\": {\n    \"total_custom_ids\": 241,\n    \"by_category\": {\n      \"trucks\": 90,\n      \"aircraft\": 45,\n      \"motorcycles\": 20,\n      \"specialized_vehicles\": 30,\n      \"artillery\": 25,\n      \"tanks\": 15,\n      \"misc\": 16\n    },\n    \"next_available_id\": 189999\n  }\n}\n```\n\n**PRESERVATION RULES**:\n- **DO NOT reassign custom IDs from iteration #2** if they already exist (100001-100008)\n- Preserve: SdKfz 251 (100001), SdKfz 250 (100002), SdKfz 7 (100003), SdKfz 11 (100004), SdKfz 9 (100005), BMW R75 (100006), Z√ºndapp KS750 (100007), Opel Blitz (100008)\n- Start new assignments at 100009 for category 100000-109999\n\n**DOCUMENTATION REQUIREMENTS**:\n- Every custom ID must have: canonical_name, custom_id, category, nation, witw_equivalent, reason_not_in_witw\n- Optional but recommended: specifications, historical_context, estimated_quantity\n- Cross-reference table: custom_id ‚Üí WITW equivalent for scenario export"
        },
        "mapping_validator": {
          "role": "Validate all mappings against historical context and quality standards",
          "inputs": ["equipment_witw_mappings.json", "canonical_equipment.json", "custom_ids.json"],
          "outputs": ["validated_mappings.json", "validation_report.json"],
          "prompt": "Validate equipment mappings: {equipment_witw_mappings}\n\nCanonical equipment: {canonical_equipment}\nCustom IDs: {custom_ids}\n\n**VALIDATION WORKFLOW**:\n\n**Step 1: Historical Accuracy Checks**\n\nFor each mapped equipment:\n1. **Date verification**:\n   - Check equipment introduction date vs quarter\n   - Example: Tiger I (1942) should not appear in 1940-Q2\n   - Flag anachronisms with severity: CRITICAL (>2 years), WARNING (<2 years)\n\n2. **Nation verification**:\n   - Verify equipment was used by specified nation\n   - Check for: Indigenous production, Lend-Lease, Captured equipment\n   - Example: M4 Sherman in British service (1942+) = valid\n   - Example: M4 Sherman in German service = flag as captured (verify context)\n\n3. **Role verification**:\n   - Verify equipment role matches category\n   - Example: \"BSA M20\" (motorcycle) matched to \"BT-42\" (tank) = FALSE POSITIVE\n   - Check: tanks ‚Üí tanks, artillery ‚Üí artillery, transport ‚Üí transport\n\n**Step 2: Confidence Validation**\n\nFor each mapping:\n1. **High confidence (‚â•90%)**: Verify match quality\n   - Exact or near-exact name match?\n   - Caliber/variant consistency?\n   - Historical context supports mapping?\n\n2. **Medium confidence (75-89%)**: Flag for review\n   - Document why confidence is not higher\n   - Provide alternate candidates if available\n   - Recommend manual verification\n\n3. **Low confidence (<75%)**: Mark for manual review\n   - Likely false positive or poor match\n   - Provide best candidate but recommend new research\n\n**Step 3: Deduplication Validation**\n\nFor canonical equipment:\n1. **Verify single WITW ID** per canonical entry\n2. **Check nation variants** map correctly\n3. **Validate specifications** are consistent across variants\n4. **Flag conflicts**:\n   - Example: \"Sherman I\" mapped to both witw_id 2025 (M4) and 2026 (M4A1)\n   - Resolve: Check if Sherman I = M4 only, or includes both variants\n\n**Step 4: Custom ID Validation**\n\nFor custom IDs:\n1. **Verify ID range** (100000-199999)\n2. **Check category prefix** matches equipment type\n3. **Validate no ID conflicts** with existing custom IDs\n4. **Ensure WITW equivalent** is documented\n5. **Check specifications** are complete\n\n**Step 5: Quality Metrics**\n\nCalculate and validate:\n1. **Mapping success rate**: High confidence / Total = ?\n   - Target: ‚â•70%\n   - Current baseline: 22.8%\n\n2. **False positive rate**: Historical validation failures / Total mapped\n   - Target: <1%\n\n3. **Duplication count**: Duplicate entries / Total canonical\n   - Target: 0\n\n4. **Manual review queue**: Medium + Low confidence / Total\n   - Target: <20%\n\n5. **Custom ID coverage**: Custom IDs assigned / Unmapped equipment\n   - Target: 100%\n\n**OUTPUT FORMAT**:\n```json\n{\n  \"validated_mappings\": [\n    {\n      \"canonical_name\": \"Panzer III Ausf H\",\n      \"witw_id\": 187,\n      \"confidence\": 98,\n      \"validation_status\": \"PASSED\",\n      \"checks\": {\n        \"date_check\": \"PASSED (1940-Q2, introduced 1940)\",\n        \"nation_check\": \"PASSED (German indigenous)\",\n        \"role_check\": \"PASSED (tank ‚Üí tank)\",\n        \"confidence_check\": \"HIGH (‚â•90%)\",\n        \"deduplication_check\": \"PASSED (no duplicates)\"\n      }\n    },\n    {\n      \"canonical_name\": \"Tiger I\",\n      \"witw_id\": 97,\n      \"confidence\": 100,\n      \"validation_status\": \"WARNING\",\n      \"checks\": {\n        \"date_check\": \"WARNING (Appears in 1942-Q1, introduced 1942-Q3)\",\n        \"nation_check\": \"PASSED\",\n        \"role_check\": \"PASSED\",\n        \"confidence_check\": \"HIGH\",\n        \"deduplication_check\": \"PASSED\"\n      },\n      \"recommendation\": \"Verify Tiger I presence in 1942-Q1, likely too early\"\n    },\n    {\n      \"canonical_name\": \"BSA M20\",\n      \"witw_id\": null,\n      \"custom_id\": 130001,\n      \"confidence\": 100,\n      \"validation_status\": \"PASSED\",\n      \"checks\": {\n        \"custom_id_check\": \"PASSED (category: motorcycle, range: 130000-139999)\",\n        \"specification_check\": \"PASSED (complete)\",\n        \"witw_equivalent_check\": \"PASSED (documented)\"\n      }\n    }\n  ],\n  \"validation_report\": {\n    \"total_validated\": 469,\n    \"passed\": 445,\n    \"warnings\": 15,\n    \"failed\": 9,\n    \"quality_metrics\": {\n      \"high_confidence_rate\": 72.5,\n      \"false_positive_rate\": 0.4,\n      \"duplication_count\": 0,\n      \"manual_review_queue\": 18.0,\n      \"custom_id_coverage\": 100.0\n    },\n    \"target_comparison\": {\n      \"high_confidence_rate\": {\"target\": 70.0, \"actual\": 72.5, \"status\": \"EXCEEDED\"},\n      \"false_positive_rate\": {\"target\": 1.0, \"actual\": 0.4, \"status\": \"PASSED\"},\n      \"duplication_count\": {\"target\": 0, \"actual\": 0, \"status\": \"PASSED\"},\n      \"manual_review_queue\": {\"target\": 20.0, \"actual\": 18.0, \"status\": \"PASSED\"}\n    },\n    \"manual_review_items\": [\n      {\n        \"canonical_name\": \"Tiger I\",\n        \"issue\": \"Date anachronism (appears Q1 1942, introduced Q3 1942)\",\n        \"severity\": \"WARNING\",\n        \"recommended_action\": \"Verify historical records or adjust quarter\"\n      }\n    ]\n  }\n}\n```\n\n**QUALITY STANDARDS ENFORCEMENT**:\n- High confidence rate must meet or exceed 70% target\n- False positive rate must be below 1%\n- Zero duplicates tolerated\n- Manual review queue should be under 20%\n- All unmapped equipment must have custom IDs\n\n**FINAL VALIDATION**:\n- All mappings have confidence scores\n- All canonical equipment have single WITW ID or custom ID\n- All nation variants are documented\n- All validation checks are recorded\n- Quality metrics meet targets"
        }
      }
    }
  ],

  "orchestration_workflow": {
    "phases": [
      {
        "phase_id": 1,
        "name": "Source Extraction",
        "agents": ["document_parser", "historical_research"],
        "outputs": ["verified_facts.json", "conflicts.json"],
        "validation_required": true
      },
      {
        "phase_id": 2,
        "name": "Organization Building",
        "agents": ["org_hierarchy", "toe_template", "unit_instantiation"],
        "outputs": ["org_tree.json", "templates/", "all_units_toe/"],
        "validation_required": true
      },
      {
        "phase_id": 3,
        "name": "Equipment Distribution",
        "agents": ["theater_allocator", "division_cascader", "equipment_reconciliation"],
        "outputs": ["division_allocations.json", "all_units_with_equipment/"],
        "validation_required": true
      },
      {
        "phase_id": 4,
        "name": "Aggregation",
        "agents": ["bottom_up_aggregator", "top3_calculator"],
        "outputs": ["theater_scm.json", "aggregated_units/"],
        "validation_required": true
      },
      {
        "phase_id": 5,
        "name": "Validation",
        "agents": ["schema_validator", "historical_accuracy"],
        "outputs": ["validation_reports/", "accuracy_reports/"],
        "validation_required": false
      },
      {
        "phase_id": 6,
        "name": "Output Generation",
        "agents": ["book_chapter_generator", "scenario_exporter", "sql_populator"],
        "outputs": ["chapters/", "scenarios/", "database.sql"],
        "validation_required": false
      },
      {
        "phase_id": 7,
        "name": "Quality Assurance & Gap Analysis",
        "agents": ["qa_auditor"],
        "outputs": ["gap_tracker.md", "quality_report.json", "compliance_report.json", "project_dashboard.md"],
        "validation_required": true,
        "description": "Project-level QA audit checking all units for completeness, gaps, template compliance, and cross-validation"
      },
      {
        "phase_id": 8,
        "name": "WITW Equipment Mapping",
        "agents": ["witw_equipment_mapper"],
        "outputs": ["equipment_witw_mappings.json", "canonical_equipment.json", "custom_ids.json", "mapping_quality_report.json"],
        "validation_required": true,
        "description": "Map all equipment to War in the West game database IDs with deduplication, custom ID assignment for unmapped items, and historical validation. Target: 70%+ high-confidence mappings"
      }
    ]
  }
}
